--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV GX" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 12.1SP1 cbx_cycloneii 2013:01:31:18:04:59:SJ cbx_lpm_add_sub 2013:01:31:18:04:59:SJ cbx_lpm_compare 2013:01:31:18:04:59:SJ cbx_lpm_decode 2013:01:31:18:04:59:SJ cbx_mgl 2013:01:31:18:08:27:SJ cbx_stratix 2013:01:31:18:04:59:SJ cbx_stratixii 2013:01:31:18:04:59:SJ  VERSION_END


-- Copyright (C) 1991-2012 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_52b
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode19166w[1..0]	: WIRE;
	w_anode19175w[3..0]	: WIRE;
	w_anode19192w[3..0]	: WIRE;
	w_anode19202w[3..0]	: WIRE;
	w_anode19212w[3..0]	: WIRE;
	w_anode19222w[3..0]	: WIRE;
	w_anode19232w[3..0]	: WIRE;
	w_anode19242w[3..0]	: WIRE;
	w_anode19252w[3..0]	: WIRE;
	w_anode19264w[1..0]	: WIRE;
	w_anode19271w[3..0]	: WIRE;
	w_anode19282w[3..0]	: WIRE;
	w_anode19292w[3..0]	: WIRE;
	w_anode19302w[3..0]	: WIRE;
	w_anode19312w[3..0]	: WIRE;
	w_anode19322w[3..0]	: WIRE;
	w_anode19332w[3..0]	: WIRE;
	w_anode19342w[3..0]	: WIRE;
	w_data19164w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode19342w[3..3], w_anode19332w[3..3], w_anode19322w[3..3], w_anode19312w[3..3], w_anode19302w[3..3], w_anode19292w[3..3], w_anode19282w[3..3], w_anode19271w[3..3]), ( w_anode19252w[3..3], w_anode19242w[3..3], w_anode19232w[3..3], w_anode19222w[3..3], w_anode19212w[3..3], w_anode19202w[3..3], w_anode19192w[3..3], w_anode19175w[3..3]));
	w_anode19166w[] = ( (w_anode19166w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode19175w[] = ( (w_anode19175w[2..2] & (! w_data19164w[2..2])), (w_anode19175w[1..1] & (! w_data19164w[1..1])), (w_anode19175w[0..0] & (! w_data19164w[0..0])), w_anode19166w[1..1]);
	w_anode19192w[] = ( (w_anode19192w[2..2] & (! w_data19164w[2..2])), (w_anode19192w[1..1] & (! w_data19164w[1..1])), (w_anode19192w[0..0] & w_data19164w[0..0]), w_anode19166w[1..1]);
	w_anode19202w[] = ( (w_anode19202w[2..2] & (! w_data19164w[2..2])), (w_anode19202w[1..1] & w_data19164w[1..1]), (w_anode19202w[0..0] & (! w_data19164w[0..0])), w_anode19166w[1..1]);
	w_anode19212w[] = ( (w_anode19212w[2..2] & (! w_data19164w[2..2])), (w_anode19212w[1..1] & w_data19164w[1..1]), (w_anode19212w[0..0] & w_data19164w[0..0]), w_anode19166w[1..1]);
	w_anode19222w[] = ( (w_anode19222w[2..2] & w_data19164w[2..2]), (w_anode19222w[1..1] & (! w_data19164w[1..1])), (w_anode19222w[0..0] & (! w_data19164w[0..0])), w_anode19166w[1..1]);
	w_anode19232w[] = ( (w_anode19232w[2..2] & w_data19164w[2..2]), (w_anode19232w[1..1] & (! w_data19164w[1..1])), (w_anode19232w[0..0] & w_data19164w[0..0]), w_anode19166w[1..1]);
	w_anode19242w[] = ( (w_anode19242w[2..2] & w_data19164w[2..2]), (w_anode19242w[1..1] & w_data19164w[1..1]), (w_anode19242w[0..0] & (! w_data19164w[0..0])), w_anode19166w[1..1]);
	w_anode19252w[] = ( (w_anode19252w[2..2] & w_data19164w[2..2]), (w_anode19252w[1..1] & w_data19164w[1..1]), (w_anode19252w[0..0] & w_data19164w[0..0]), w_anode19166w[1..1]);
	w_anode19264w[] = ( (w_anode19264w[0..0] & data_wire[3..3]), enable_wire);
	w_anode19271w[] = ( (w_anode19271w[2..2] & (! w_data19164w[2..2])), (w_anode19271w[1..1] & (! w_data19164w[1..1])), (w_anode19271w[0..0] & (! w_data19164w[0..0])), w_anode19264w[1..1]);
	w_anode19282w[] = ( (w_anode19282w[2..2] & (! w_data19164w[2..2])), (w_anode19282w[1..1] & (! w_data19164w[1..1])), (w_anode19282w[0..0] & w_data19164w[0..0]), w_anode19264w[1..1]);
	w_anode19292w[] = ( (w_anode19292w[2..2] & (! w_data19164w[2..2])), (w_anode19292w[1..1] & w_data19164w[1..1]), (w_anode19292w[0..0] & (! w_data19164w[0..0])), w_anode19264w[1..1]);
	w_anode19302w[] = ( (w_anode19302w[2..2] & (! w_data19164w[2..2])), (w_anode19302w[1..1] & w_data19164w[1..1]), (w_anode19302w[0..0] & w_data19164w[0..0]), w_anode19264w[1..1]);
	w_anode19312w[] = ( (w_anode19312w[2..2] & w_data19164w[2..2]), (w_anode19312w[1..1] & (! w_data19164w[1..1])), (w_anode19312w[0..0] & (! w_data19164w[0..0])), w_anode19264w[1..1]);
	w_anode19322w[] = ( (w_anode19322w[2..2] & w_data19164w[2..2]), (w_anode19322w[1..1] & (! w_data19164w[1..1])), (w_anode19322w[0..0] & w_data19164w[0..0]), w_anode19264w[1..1]);
	w_anode19332w[] = ( (w_anode19332w[2..2] & w_data19164w[2..2]), (w_anode19332w[1..1] & w_data19164w[1..1]), (w_anode19332w[0..0] & (! w_data19164w[0..0])), w_anode19264w[1..1]);
	w_anode19342w[] = ( (w_anode19342w[2..2] & w_data19164w[2..2]), (w_anode19342w[1..1] & w_data19164w[1..1]), (w_anode19342w[0..0] & w_data19164w[0..0]), w_anode19264w[1..1]);
	w_data19164w[2..0] = data_wire[2..0];
END;
--VALID FILE
