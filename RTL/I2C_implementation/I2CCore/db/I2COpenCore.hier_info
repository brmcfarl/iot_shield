|I2COpenCore
clk_50 => clk_50.IN5
user_buttons[0] => _.IN1
user_buttons[1] => _.IN1
user_sw[0] => _.IN1
user_sw[1] => _.IN1
user_sw[2] => ~NO_FANOUT~
user_sw[3] => ~NO_FANOUT~
user_sw[4] => ~NO_FANOUT~
user_sw[5] => ~NO_FANOUT~
user_sw[6] => ~NO_FANOUT~
user_sw[7] => ~NO_FANOUT~
user_leds[0] <= i2c_master_top:i2c_master.wb_dat_o
user_leds[1] <= i2c_master_top:i2c_master.wb_dat_o
user_leds[2] <= i2c_master_top:i2c_master.wb_dat_o
user_leds[3] <= i2c_master_top:i2c_master.wb_dat_o
user_leds[4] <= i2c_master_top:i2c_master.wb_dat_o
user_leds[5] <= i2c_master_top:i2c_master.wb_dat_o
user_leds[6] <= i2c_master_top:i2c_master.wb_dat_o
user_leds[7] <= i2c_master_top:i2c_master.wb_dat_o
i2c_sda <> i2c_sda
i2c_scl <> i2c_scl


|I2COpenCore|debouncer:d1
pressed <= pressed.DB_MAX_OUTPUT_PORT_TYPE
held <= button_debounced.DB_MAX_OUTPUT_PORT_TYPE
button => always0.IN1
button => button_sample.DATAB
button => button_debounced.DATAA
clk => button_debounced_d.CLK
clk => button_debounced.CLK
clk => button_sample.CLK
clk => timer[0].CLK
clk => timer[1].CLK
clk => timer[2].CLK
clk => timer[3].CLK
clk => timer[4].CLK
clk => timer[5].CLK
clk => timer[6].CLK
clk => timer[7].CLK
clk => timer[8].CLK
clk => timer[9].CLK
clk => timer[10].CLK
clk => timer[11].CLK
clk => timer[12].CLK
clk => timer[13].CLK
clk => timer[14].CLK
clk => timer[15].CLK
clk => timer[16].CLK
clk => timer[17].CLK
clk => timer[18].CLK
clk => timer[19].CLK
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => button_sample.OUTPUTSELECT
reset => button_debounced.OUTPUTSELECT
reset => button_debounced_d.ENA


|I2COpenCore|debouncer:d2
pressed <= pressed.DB_MAX_OUTPUT_PORT_TYPE
held <= button_debounced.DB_MAX_OUTPUT_PORT_TYPE
button => always0.IN1
button => button_sample.DATAB
button => button_debounced.DATAA
clk => button_debounced_d.CLK
clk => button_debounced.CLK
clk => button_sample.CLK
clk => timer[0].CLK
clk => timer[1].CLK
clk => timer[2].CLK
clk => timer[3].CLK
clk => timer[4].CLK
clk => timer[5].CLK
clk => timer[6].CLK
clk => timer[7].CLK
clk => timer[8].CLK
clk => timer[9].CLK
clk => timer[10].CLK
clk => timer[11].CLK
clk => timer[12].CLK
clk => timer[13].CLK
clk => timer[14].CLK
clk => timer[15].CLK
clk => timer[16].CLK
clk => timer[17].CLK
clk => timer[18].CLK
clk => timer[19].CLK
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => button_sample.OUTPUTSELECT
reset => button_debounced.OUTPUTSELECT
reset => button_debounced_d.ENA


|I2COpenCore|debouncer:d3
pressed <= pressed.DB_MAX_OUTPUT_PORT_TYPE
held <= button_debounced.DB_MAX_OUTPUT_PORT_TYPE
button => always0.IN1
button => button_sample.DATAB
button => button_debounced.DATAA
clk => button_debounced_d.CLK
clk => button_debounced.CLK
clk => button_sample.CLK
clk => timer[0].CLK
clk => timer[1].CLK
clk => timer[2].CLK
clk => timer[3].CLK
clk => timer[4].CLK
clk => timer[5].CLK
clk => timer[6].CLK
clk => timer[7].CLK
clk => timer[8].CLK
clk => timer[9].CLK
clk => timer[10].CLK
clk => timer[11].CLK
clk => timer[12].CLK
clk => timer[13].CLK
clk => timer[14].CLK
clk => timer[15].CLK
clk => timer[16].CLK
clk => timer[17].CLK
clk => timer[18].CLK
clk => timer[19].CLK
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => button_sample.OUTPUTSELECT
reset => button_debounced.OUTPUTSELECT
reset => button_debounced_d.ENA


|I2COpenCore|debouncer:d4
pressed <= pressed.DB_MAX_OUTPUT_PORT_TYPE
held <= button_debounced.DB_MAX_OUTPUT_PORT_TYPE
button => always0.IN1
button => button_sample.DATAB
button => button_debounced.DATAA
clk => button_debounced_d.CLK
clk => button_debounced.CLK
clk => button_sample.CLK
clk => timer[0].CLK
clk => timer[1].CLK
clk => timer[2].CLK
clk => timer[3].CLK
clk => timer[4].CLK
clk => timer[5].CLK
clk => timer[6].CLK
clk => timer[7].CLK
clk => timer[8].CLK
clk => timer[9].CLK
clk => timer[10].CLK
clk => timer[11].CLK
clk => timer[12].CLK
clk => timer[13].CLK
clk => timer[14].CLK
clk => timer[15].CLK
clk => timer[16].CLK
clk => timer[17].CLK
clk => timer[18].CLK
clk => timer[19].CLK
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => timer.OUTPUTSELECT
reset => button_sample.OUTPUTSELECT
reset => button_debounced.OUTPUTSELECT
reset => button_debounced_d.ENA


|I2COpenCore|i2c_master_top:i2c_master
wb_clk_i => wb_clk_i.IN1
wb_rst_i => wb_rst_i.IN1
arst_i => rst_i.IN1
wb_adr_i[0] => Mux0.IN3
wb_adr_i[0] => Mux1.IN3
wb_adr_i[0] => Mux2.IN3
wb_adr_i[0] => Mux3.IN4
wb_adr_i[0] => Mux4.IN4
wb_adr_i[0] => Mux5.IN4
wb_adr_i[0] => Mux6.IN3
wb_adr_i[0] => Mux7.IN3
wb_adr_i[0] => Decoder0.IN2
wb_adr_i[0] => Equal0.IN2
wb_adr_i[1] => Mux0.IN2
wb_adr_i[1] => Mux1.IN2
wb_adr_i[1] => Mux2.IN2
wb_adr_i[1] => Mux3.IN3
wb_adr_i[1] => Mux4.IN3
wb_adr_i[1] => Mux5.IN3
wb_adr_i[1] => Mux6.IN2
wb_adr_i[1] => Mux7.IN2
wb_adr_i[1] => Decoder0.IN1
wb_adr_i[1] => Equal0.IN1
wb_adr_i[2] => Mux0.IN1
wb_adr_i[2] => Mux1.IN1
wb_adr_i[2] => Mux2.IN1
wb_adr_i[2] => Mux3.IN2
wb_adr_i[2] => Mux4.IN2
wb_adr_i[2] => Mux5.IN2
wb_adr_i[2] => Mux6.IN1
wb_adr_i[2] => Mux7.IN1
wb_adr_i[2] => Decoder0.IN0
wb_adr_i[2] => Equal0.IN0
wb_dat_i[0] => txr.DATAB
wb_dat_i[0] => ctr.DATAB
wb_dat_i[0] => prer.DATAB
wb_dat_i[0] => prer.DATAB
wb_dat_i[0] => cr.DATAB
wb_dat_i[1] => txr.DATAB
wb_dat_i[1] => ctr.DATAB
wb_dat_i[1] => prer.DATAB
wb_dat_i[1] => prer.DATAB
wb_dat_i[1] => cr.DATAB
wb_dat_i[2] => txr.DATAB
wb_dat_i[2] => ctr.DATAB
wb_dat_i[2] => prer.DATAB
wb_dat_i[2] => prer.DATAB
wb_dat_i[2] => cr.DATAB
wb_dat_i[3] => txr.DATAB
wb_dat_i[3] => ctr.DATAB
wb_dat_i[3] => prer.DATAB
wb_dat_i[3] => prer.DATAB
wb_dat_i[3] => cr.DATAB
wb_dat_i[4] => txr.DATAB
wb_dat_i[4] => ctr.DATAB
wb_dat_i[4] => prer.DATAB
wb_dat_i[4] => prer.DATAB
wb_dat_i[4] => cr.DATAB
wb_dat_i[5] => txr.DATAB
wb_dat_i[5] => ctr.DATAB
wb_dat_i[5] => prer.DATAB
wb_dat_i[5] => prer.DATAB
wb_dat_i[5] => cr.DATAB
wb_dat_i[6] => txr.DATAB
wb_dat_i[6] => ctr.DATAB
wb_dat_i[6] => prer.DATAB
wb_dat_i[6] => prer.DATAB
wb_dat_i[6] => cr.DATAB
wb_dat_i[7] => txr.DATAB
wb_dat_i[7] => ctr.DATAB
wb_dat_i[7] => prer.DATAB
wb_dat_i[7] => prer.DATAB
wb_dat_i[7] => cr.DATAB
wb_dat_o[0] <= wb_dat_o[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[1] <= wb_dat_o[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[2] <= wb_dat_o[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[3] <= wb_dat_o[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[4] <= wb_dat_o[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[5] <= wb_dat_o[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[6] <= wb_dat_o[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[7] <= wb_dat_o[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wb_we_i => wb_wacc.IN1
wb_stb_i => wb_ack_o.IN0
wb_cyc_i => wb_ack_o.IN1
wb_ack_o <= wb_ack_o~reg0.DB_MAX_OUTPUT_PORT_TYPE
wb_inta_o <= wb_inta_o~reg0.DB_MAX_OUTPUT_PORT_TYPE
scl_pad_i => scl_pad_i.IN1
scl_pad_o <= i2c_master_byte_ctrl:byte_controller.scl_o
scl_padoen_o <= i2c_master_byte_ctrl:byte_controller.scl_oen
sda_pad_i => sda_pad_i.IN1
sda_pad_o <= i2c_master_byte_ctrl:byte_controller.sda_o
sda_padoen_o <= i2c_master_byte_ctrl:byte_controller.sda_oen


|I2COpenCore|i2c_master_top:i2c_master|i2c_master_byte_ctrl:byte_controller
clk => clk.IN1
rst => rst.IN1
nReset => nReset.IN1
ena => ena.IN1
clk_cnt[0] => clk_cnt[0].IN1
clk_cnt[1] => clk_cnt[1].IN1
clk_cnt[2] => clk_cnt[2].IN1
clk_cnt[3] => clk_cnt[3].IN1
clk_cnt[4] => clk_cnt[4].IN1
clk_cnt[5] => clk_cnt[5].IN1
clk_cnt[6] => clk_cnt[6].IN1
clk_cnt[7] => clk_cnt[7].IN1
clk_cnt[8] => clk_cnt[8].IN1
clk_cnt[9] => clk_cnt[9].IN1
clk_cnt[10] => clk_cnt[10].IN1
clk_cnt[11] => clk_cnt[11].IN1
clk_cnt[12] => clk_cnt[12].IN1
clk_cnt[13] => clk_cnt[13].IN1
clk_cnt[14] => clk_cnt[14].IN1
clk_cnt[15] => clk_cnt[15].IN1
start => core_cmd.OUTPUTSELECT
start => core_cmd.OUTPUTSELECT
start => core_cmd.OUTPUTSELECT
start => c_state.DATAB
start => core_cmd.DATAB
stop => go.IN1
stop => c_state.DATAB
stop => core_cmd.DATAB
stop => cmd_ack.DATAB
stop => c_state.DATAB
read => go.IN0
read => core_cmd.OUTPUTSELECT
read => core_cmd.OUTPUTSELECT
read => core_cmd.DATAA
read => c_state.DATAB
read => core_cmd.DATAB
read => core_cmd.DATAB
read => c_state.DATAB
write => go.IN1
write => core_cmd.DATAA
write => core_cmd.DATAA
ack_in => core_txd.DATAB
ack_in => core_txd.DATAA
din[0] => sr.DATAB
din[1] => sr.DATAB
din[2] => sr.DATAB
din[3] => sr.DATAB
din[4] => sr.DATAB
din[5] => sr.DATAB
din[6] => sr.DATAB
din[7] => sr.DATAB
cmd_ack <= cmd_ack~reg0.DB_MAX_OUTPUT_PORT_TYPE
ack_out <= ack_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= sr[0].DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= sr[1].DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= sr[2].DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= sr[3].DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= sr[4].DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= sr[5].DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= sr[6].DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= sr[7].DB_MAX_OUTPUT_PORT_TYPE
i2c_busy <= i2c_master_bit_ctrl:bit_controller.busy
i2c_al <= i2c_master_bit_ctrl:bit_controller.al
scl_i => scl_i.IN1
scl_o <= i2c_master_bit_ctrl:bit_controller.scl_o
scl_oen <= i2c_master_bit_ctrl:bit_controller.scl_oen
sda_i => sda_i.IN1
sda_o <= i2c_master_bit_ctrl:bit_controller.sda_o
sda_oen <= i2c_master_bit_ctrl:bit_controller.sda_oen


|I2COpenCore|i2c_master_top:i2c_master|i2c_master_byte_ctrl:byte_controller|i2c_master_bit_ctrl:bit_controller
clk => sda_chk.CLK
clk => sda_oen~reg0.CLK
clk => scl_oen~reg0.CLK
clk => cmd_ack~reg0.CLK
clk => c_state[0].CLK
clk => c_state[1].CLK
clk => c_state[2].CLK
clk => c_state[3].CLK
clk => c_state[4].CLK
clk => c_state[5].CLK
clk => c_state[6].CLK
clk => c_state[7].CLK
clk => c_state[8].CLK
clk => c_state[9].CLK
clk => c_state[10].CLK
clk => c_state[11].CLK
clk => c_state[12].CLK
clk => c_state[13].CLK
clk => c_state[14].CLK
clk => c_state[15].CLK
clk => c_state[16].CLK
clk => c_state[17].CLK
clk => dout~reg0.CLK
clk => al~reg0.CLK
clk => cmd_stop.CLK
clk => busy~reg0.CLK
clk => sto_condition.CLK
clk => sta_condition.CLK
clk => dSDA.CLK
clk => dSCL.CLK
clk => sSDA.CLK
clk => sSCL.CLK
clk => fSDA[0].CLK
clk => fSDA[1].CLK
clk => fSDA[2].CLK
clk => fSCL[0].CLK
clk => fSCL[1].CLK
clk => fSCL[2].CLK
clk => filter_cnt[0].CLK
clk => filter_cnt[1].CLK
clk => filter_cnt[2].CLK
clk => filter_cnt[3].CLK
clk => filter_cnt[4].CLK
clk => filter_cnt[5].CLK
clk => filter_cnt[6].CLK
clk => filter_cnt[7].CLK
clk => filter_cnt[8].CLK
clk => filter_cnt[9].CLK
clk => filter_cnt[10].CLK
clk => filter_cnt[11].CLK
clk => filter_cnt[12].CLK
clk => filter_cnt[13].CLK
clk => cSDA[0].CLK
clk => cSDA[1].CLK
clk => cSCL[0].CLK
clk => cSCL[1].CLK
clk => clk_en.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
clk => slave_wait.CLK
clk => dscl_oen.CLK
rst => always2.IN1
rst => cSCL.OUTPUTSELECT
rst => cSCL.OUTPUTSELECT
rst => cSDA.OUTPUTSELECT
rst => cSDA.OUTPUTSELECT
rst => always4.IN0
rst => fSCL.OUTPUTSELECT
rst => fSCL.OUTPUTSELECT
rst => fSCL.OUTPUTSELECT
rst => fSDA.OUTPUTSELECT
rst => fSDA.OUTPUTSELECT
rst => fSDA.OUTPUTSELECT
rst => sSCL.OUTPUTSELECT
rst => sSDA.OUTPUTSELECT
rst => dSCL.OUTPUTSELECT
rst => dSDA.OUTPUTSELECT
rst => sta_condition.OUTPUTSELECT
rst => sto_condition.OUTPUTSELECT
rst => busy.OUTPUTSELECT
rst => cmd_stop.OUTPUTSELECT
rst => al.OUTPUTSELECT
rst => always12.IN1
nReset => sda_chk.ACLR
nReset => sda_oen~reg0.PRESET
nReset => scl_oen~reg0.PRESET
nReset => cmd_ack~reg0.ACLR
nReset => c_state[0].ACLR
nReset => c_state[1].ACLR
nReset => c_state[2].ACLR
nReset => c_state[3].ACLR
nReset => c_state[4].ACLR
nReset => c_state[5].ACLR
nReset => c_state[6].ACLR
nReset => c_state[7].ACLR
nReset => c_state[8].ACLR
nReset => c_state[9].ACLR
nReset => c_state[10].ACLR
nReset => c_state[11].ACLR
nReset => c_state[12].ACLR
nReset => c_state[13].ACLR
nReset => c_state[14].ACLR
nReset => c_state[15].ACLR
nReset => c_state[16].ACLR
nReset => c_state[17].ACLR
nReset => busy~reg0.ACLR
nReset => al~reg0.ACLR
nReset => slave_wait.ACLR
nReset => clk_en.PRESET
nReset => cnt[0].ACLR
nReset => cnt[1].ACLR
nReset => cnt[2].ACLR
nReset => cnt[3].ACLR
nReset => cnt[4].ACLR
nReset => cnt[5].ACLR
nReset => cnt[6].ACLR
nReset => cnt[7].ACLR
nReset => cnt[8].ACLR
nReset => cnt[9].ACLR
nReset => cnt[10].ACLR
nReset => cnt[11].ACLR
nReset => cnt[12].ACLR
nReset => cnt[13].ACLR
nReset => cnt[14].ACLR
nReset => cnt[15].ACLR
nReset => cSDA[0].ACLR
nReset => cSDA[1].ACLR
nReset => cSCL[0].ACLR
nReset => cSCL[1].ACLR
nReset => filter_cnt[0].ACLR
nReset => filter_cnt[1].ACLR
nReset => filter_cnt[2].ACLR
nReset => filter_cnt[3].ACLR
nReset => filter_cnt[4].ACLR
nReset => filter_cnt[5].ACLR
nReset => filter_cnt[6].ACLR
nReset => filter_cnt[7].ACLR
nReset => filter_cnt[8].ACLR
nReset => filter_cnt[9].ACLR
nReset => filter_cnt[10].ACLR
nReset => filter_cnt[11].ACLR
nReset => filter_cnt[12].ACLR
nReset => filter_cnt[13].ACLR
nReset => fSDA[0].PRESET
nReset => fSDA[1].PRESET
nReset => fSDA[2].PRESET
nReset => fSCL[0].PRESET
nReset => fSCL[1].PRESET
nReset => fSCL[2].PRESET
nReset => dSDA.PRESET
nReset => dSCL.PRESET
nReset => sSDA.PRESET
nReset => sSCL.PRESET
nReset => sto_condition.ACLR
nReset => sta_condition.ACLR
nReset => cmd_stop.ACLR
ena => always2.IN1
ena => always4.IN1
clk_cnt[0] => cnt.DATAB
clk_cnt[1] => cnt.DATAB
clk_cnt[2] => cnt.DATAB
clk_cnt[2] => filter_cnt.DATAB
clk_cnt[3] => cnt.DATAB
clk_cnt[3] => filter_cnt.DATAB
clk_cnt[4] => cnt.DATAB
clk_cnt[4] => filter_cnt.DATAB
clk_cnt[5] => cnt.DATAB
clk_cnt[5] => filter_cnt.DATAB
clk_cnt[6] => cnt.DATAB
clk_cnt[6] => filter_cnt.DATAB
clk_cnt[7] => cnt.DATAB
clk_cnt[7] => filter_cnt.DATAB
clk_cnt[8] => cnt.DATAB
clk_cnt[8] => filter_cnt.DATAB
clk_cnt[9] => cnt.DATAB
clk_cnt[9] => filter_cnt.DATAB
clk_cnt[10] => cnt.DATAB
clk_cnt[10] => filter_cnt.DATAB
clk_cnt[11] => cnt.DATAB
clk_cnt[11] => filter_cnt.DATAB
clk_cnt[12] => cnt.DATAB
clk_cnt[12] => filter_cnt.DATAB
clk_cnt[13] => cnt.DATAB
clk_cnt[13] => filter_cnt.DATAB
clk_cnt[14] => cnt.DATAB
clk_cnt[14] => filter_cnt.DATAB
clk_cnt[15] => cnt.DATAB
clk_cnt[15] => filter_cnt.DATAB
cmd[0] => Decoder0.IN3
cmd[0] => Equal0.IN3
cmd[1] => Decoder0.IN2
cmd[1] => Equal0.IN0
cmd[2] => Decoder0.IN1
cmd[2] => Equal0.IN2
cmd[3] => Decoder0.IN0
cmd[3] => Equal0.IN1
cmd_ack <= cmd_ack~reg0.DB_MAX_OUTPUT_PORT_TYPE
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
al <= al~reg0.DB_MAX_OUTPUT_PORT_TYPE
din => Selector1.IN6
dout <= dout~reg0.DB_MAX_OUTPUT_PORT_TYPE
scl_i => cSCL.DATAA
scl_o <= <GND>
scl_oen <= scl_oen~reg0.DB_MAX_OUTPUT_PORT_TYPE
sda_i => cSDA.DATAA
sda_o <= <GND>
sda_oen <= sda_oen~reg0.DB_MAX_OUTPUT_PORT_TYPE


